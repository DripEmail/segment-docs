---
title: Google Analytics 4 FAQ and Troubleshooting
strat: google

---
## Google Analytics 4 FAQ and troubleshooting

### Debug mode

The Google Analytics 4 [debug mode](https://support.google.com/analytics/answer/7201382?hl=en){:target="_blank"} is supported with the Google Analytics 4 Web destination. DebugView displays the events and user properties that Analytics collects from a user in real-time. This can be helpful in troubleshooting your implementation.

### Send events from both the browser and the server 

With Google Analytics 4 Web, events are sent from the browser (client-side) to GA4. If you use Segment’s [Google Analytics 4 Cloud destination](/docs/connections/destinations/catalog/actions-google-analytics-4/#benefits-of-google-analytics-4-cloud) to send events through the Measurement Protocol API and want to tie data between client-side and server-side, you need to pass the same Client ID from the browser and the server for GA4 to merge events around a distinct user, and if you want the server-side event to be tied to the client-side session, you must pass the session_id in the server side event.

The client_id and the session_id are both cookies stored in the user browser.  You can use [Google gtag get commands](https://developers.google.com/tag-platform/gtagjs/reference#get){:target=”_blank”} or other cookie methods to parse these values from the _ga cookie and _ga_measurementId cookie:
If your _ga cookie is GA1.1.1783165678.1701112990 then 1783165678.1701112990 is your client_id
If your _ga_M12454XDR cookie is GS1.1.1710342977.347.1.1710343074.0.0.0 then 1710342977 is you session_id

It is not required to send a session number for server-side hits.  Session metrics will come from the client-side data after the server-side event data is stitched to the client-side session.

A hybrid GA4 application is an advanced implementation and it is advised to enable GA4 Web destination first, then incorporate GA4 Cloud destination to augment your client-side tracking.  It is also recommended you have deep knowledge of GA4 session-stitching, troubleshooting, and known caveats of GA4 Measurement Protocol prior to implementing.

### Additional (unmapped) events are sent to GA4

Google Analytics 4 collects events triggered by basic interactions with your site. For more information, see [Google Analytics 4 Automatically Collected events](https://support.google.com/analytics/answer/9234069?hl=en){:target="_blank"}

### Data takes a long time to appear in Google's reports

Google may take [24-48 hours](https://support.google.com/analytics/answer/9333790){:target="_blank"} to process data sent to Google Analytics. As a result, the Google Analytics user interface may not reflect the most current data. The Google Analytics [Realtime report](https://support.google.com/analytics/answer/9271392){:target="_blank"} displays activity on your site as it happens; however, events seen in Realtime Reports do not always equate to how the data is processed in the standard reports.  Typically we see this when a Custom Definition is not defined in the GA4 Admin panel.

### Data is not sent to Google

For event data to be sent downstream to Google Analytics:

1. The **Set Configuration Fields** mapping must be configured and enabled in your mappings. This mapping is required for data to be sent downstream because it sets configuration to the GA4 Measurement ID indicated in the Settings and establishes data flow using the `config` command.

2. Ensure that you're calling `analytics.page()` on page load. Analytics.js requires an initial Page call to send data to Google Analytics 4 Web. The Segment snippet includes this initial call by default.
3. Send data with an event, typically this is a page_view as your first event.  Note: If you toggled “On” Page Views in your Settings, then the page_view event will automatically send when Set Configuration Mapping is triggered.  If you need to override this setting for your particular use case, read {{link to this section: ### Can I override my send_page_view selection that I declared in the Settings?}}

All in all, the Set Configuration Mapping is a crucial part of your GA4 Web setup.  It provides the “handshake” between your site and the gtag library.  If no events are not sending to your GA4 instance, then use one of the Debugging Tools to check the sequence of GA4 events

### Duplicate `page_view` events in GA4

If you are sending multiple `gtag(‘config’)` commands called from Set Configuration mapping on one page before a new DOM has loaded, and you have defined `send_page_view: true` with each ‘Config’ event, you may see duplicate `page_view` events sent to your GA4 measurement id.  . If this is the case, please refer to Google's documentation on [Ignoring duplicate instances of on-page configuration](https://support.google.com/analytics/answer/9973999?hl=en#:~:text=as%20described%20below.-,Ignore%20duplicate%20instances%20of%20on%2Dpage%20configuration,Click%20Save.,-Give%20feedback%20about){:target="_blank"}. 

Note: If your site is a Single Page Application (SPA), you may want to leave this toggle ‘off’ in the Google Tag Admin since a new DOM would not be called on each new page path.  If that is the case, and you have multiple Set Configuration mappings, utilize the new field Send Page Views field mapping  to override the `send_page_view` parameter that is set in your Settings.  This selection will take precedence over what is defined in the Segment Settings.  Leaving the selection undefined will always fallback to what is selected in the Segment Settings.
If you have enabled Enhanced Measurement, additional `page_view` events may be sent from this selection where you are tracking pages from Segment, but also from Enhanced Measurement.  Typically this happens from **Page changes based on browser history events** under the advanced settings of the **pageviews** section.  To avoid double counting pageviews on history state changes disable this feature. More in Google's documentation on [Manual Pageviews](https://developers.google.com/analytics/devguides/collection/ga4/views?client_type=gtag#manual_pageviews){:target="_blank"}.

### Manually send `page_view` events

If you prefer to keep the **Page Views** setting disabled and manually send a `page_view`, please see this Google Doc for more on [Manual Pageviews](https://developers.google.com/analytics/devguides/collection/ga4/views?client_type=gtag#manually_send_page_view_events).

With Google Analytics 4 Web, you will need to configure a [Custom Event](/docs/connections/destinations/catalog/actions-google-analytics-4-web/#custom-event) mapping for manually sending `page_view` events. When mapping the events, please make sure to set the Event Name to `page_view`.

As announced in an earlier section, Segment recently enabled the ability to override the send_page_view value defined in the Segment Settings.  If needed, within your Set Configuration Mapping, select “Show More Fields” to expose the field mapping, and select either True or False.  This selection will take precedence over what is defined in the Segment Settings.  Leaving the selection undefined will always fallback to what is selected in the Segment Settings.

### Tracking UTM Parameters

UTM Parameters are automatically tracked and sent to Google when they are present in the URL. For example, with the following URL:
`https://www.example.com/?utm_content=email_variation1&utm_medium=email&utm_source=email_promo&utm_campaign=summer_sale&utm_id=abcd`

By default, if the UTM values are found in the `page_location` parameter, GA4 will automatically map the campaign parameters to their appropriate value.  There is no additional configuration required, unless you want to override what GA4 defines.  This is true for both Event mappings and the Set Configuration mapping.  If you modify the output of the `page_location` and the UTM parameters are not included, this could result in erroneous acquisition and attribution mapping.  Furthermore, you can observe by triggering a `Page` call with UTM parameters present in the URL and navigating to the **Realtime overview** report in GA4 to see the resulting `page_view` event under the _Event count by Event name_ card - the Acquisition card in Realtime reflects First User acquisition and may not reflect the parameters of the event if this was a second session event

### Pass Custom Event Parameters to all Events and Custom Item Parameters to all Recommended Ecommerce Events

Within the Set Configuration Mapping, click Show All Fields, and enter any custom Event Parameters you would like to pass to all events on the page, including page_view.  Remember that any event parameters that have the same parameter key in Event Mappings will take precedence over what is set in the Set Configuration Mapping.  

To send custom item parameters, add the custom item parameter name in mappings where there is a Products array.  Make sure to register your custom item parameter in the GA4 Admin panel if you would like this value processed in the GA4 UI.  Custom item parameters can ONLY be added in the Products array.  If added as an Event Parameter, it will be registered as an Event Parameter.

### My Events Send to the wrong Google ID

In each Event Mapping, there is a “Send To” parameter.  Indicate “True” if you would like to include the send_to parameter and only send the event to the measurement_id indicated within the Settings.  If you select “False” or do not enter a selection, GA4 Events will broadcast to all measurement ids, including Google Ads ids, on the page.

### Can I override my send_page_view selection that I declared in the Settings?

Yes.  In the Set Configuration Mapping, click Show All Fields and scroll to Send Page Views.  Your selection will override what is set within the Settings.  This is helpful if you are updating the user_id or user_properties for all events on the page where you want to call the config command but do not want to send a page_view.

### Differences between Google Analytics 4 Cloud and Google Analytics 4 Web destinations 

Segment's [Google Analytics 4 Cloud](/docs/connections/destinations/catalog/actions-google-analytics-4/) server-side destination uses Google's Measurement Protocol API to send event data server to server, whereas Segment's [Google Analytics 4 Web](/docs/connections/destinations/catalog/actions-google-analytics-4-web/) device-mode destination loads the gtag.js library client-side and uses Segment's event data to map to gtag.js events directly. Each destination has its own advantages and disadvantages. Your choice between the two will depend on your specific use case, technical expertise, and the platforms from which you want to track data.